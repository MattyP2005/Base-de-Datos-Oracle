// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Oracle.EntityFrameworkCore.Metadata;

#nullable disable

namespace EventoUTN.API.Migrations
{
    [DbContext(typeof(AppContext))]
    partial class AppContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.15")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            OracleModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("EventosUTN.Certificados", b =>
                {
                    b.Property<int>("IdCertificado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdCertificado"));

                    b.Property<bool>("Emitido")
                        .HasColumnType("NUMBER(1)");

                    b.Property<int>("IdInscripcion")
                        .HasColumnType("NUMBER(10)");

                    b.Property<int?>("InscripcionesIdInscripcion")
                        .HasColumnType("NUMBER(10)");

                    b.HasKey("IdCertificado");

                    b.HasIndex("InscripcionesIdInscripcion");

                    b.ToTable("Certificados");
                });

            modelBuilder.Entity("EventosUTN.EventoPonentes", b =>
                {
                    b.Property<int>("IdEventoPonentes")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdEventoPonentes"));

                    b.Property<bool>("Confirmacion")
                        .HasColumnType("NUMBER(1)");

                    b.Property<int?>("EventosIdEvento")
                        .HasColumnType("NUMBER(10)");

                    b.Property<int>("IdEvento")
                        .HasColumnType("NUMBER(10)");

                    b.Property<int>("IdPonentes")
                        .HasColumnType("NUMBER(10)");

                    b.Property<int?>("PonentesIdPonentes")
                        .HasColumnType("NUMBER(10)");

                    b.HasKey("IdEventoPonentes");

                    b.HasIndex("EventosIdEvento");

                    b.HasIndex("PonentesIdPonentes");

                    b.ToTable("EventoPonentes");
                });

            modelBuilder.Entity("EventosUTN.Eventos", b =>
                {
                    b.Property<int>("IdEvento")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdEvento"));

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<string>("Lugar")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("TipoEvento")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.HasKey("IdEvento");

                    b.ToTable("Eventos");
                });

            modelBuilder.Entity("EventosUTN.Inscripciones", b =>
                {
                    b.Property<int>("IdInscripcion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdInscripcion"));

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<int?>("EventoIdEvento")
                        .HasColumnType("NUMBER(10)");

                    b.Property<DateTime>("FechaInscripcion")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<int>("IdEvento")
                        .HasColumnType("NUMBER(10)");

                    b.Property<int>("IdParticipante")
                        .HasColumnType("NUMBER(10)");

                    b.Property<int?>("ParticipanteIdParticipante")
                        .HasColumnType("NUMBER(10)");

                    b.Property<int?>("PonentesIdPonentes")
                        .HasColumnType("NUMBER(10)");

                    b.HasKey("IdInscripcion");

                    b.HasIndex("EventoIdEvento");

                    b.HasIndex("ParticipanteIdParticipante");

                    b.HasIndex("PonentesIdPonentes");

                    b.ToTable("Inscripciones");
                });

            modelBuilder.Entity("EventosUTN.Pagos", b =>
                {
                    b.Property<int>("IdPago")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdPago"));

                    b.Property<int>("IdInscripcion")
                        .HasColumnType("NUMBER(10)");

                    b.Property<int?>("InscripcionesIdInscripcion")
                        .HasColumnType("NUMBER(10)");

                    b.Property<decimal>("Monto")
                        .HasColumnType("DECIMAL(18, 2)");

                    b.HasKey("IdPago");

                    b.HasIndex("InscripcionesIdInscripcion");

                    b.ToTable("Pagos");
                });

            modelBuilder.Entity("EventosUTN.Participantes", b =>
                {
                    b.Property<int>("IdParticipante")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdParticipante"));

                    b.Property<string>("Dirreccion")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("Genero")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.HasKey("IdParticipante");

                    b.ToTable("Participantes");
                });

            modelBuilder.Entity("EventosUTN.Ponentes", b =>
                {
                    b.Property<int>("IdPonentes")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdPonentes"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("Especialidad")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("Genero")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.HasKey("IdPonentes");

                    b.ToTable("Ponentes");
                });

            modelBuilder.Entity("EventosUTN.Certificados", b =>
                {
                    b.HasOne("EventosUTN.Inscripciones", "Inscripciones")
                        .WithMany()
                        .HasForeignKey("InscripcionesIdInscripcion");

                    b.Navigation("Inscripciones");
                });

            modelBuilder.Entity("EventosUTN.EventoPonentes", b =>
                {
                    b.HasOne("EventosUTN.Eventos", "Eventos")
                        .WithMany()
                        .HasForeignKey("EventosIdEvento");

                    b.HasOne("EventosUTN.Ponentes", "Ponentes")
                        .WithMany()
                        .HasForeignKey("PonentesIdPonentes");

                    b.Navigation("Eventos");

                    b.Navigation("Ponentes");
                });

            modelBuilder.Entity("EventosUTN.Inscripciones", b =>
                {
                    b.HasOne("EventosUTN.Eventos", "Evento")
                        .WithMany()
                        .HasForeignKey("EventoIdEvento");

                    b.HasOne("EventosUTN.Participantes", "Participante")
                        .WithMany("Inscripciones")
                        .HasForeignKey("ParticipanteIdParticipante");

                    b.HasOne("EventosUTN.Ponentes", null)
                        .WithMany("Inscripciones")
                        .HasForeignKey("PonentesIdPonentes");

                    b.Navigation("Evento");

                    b.Navigation("Participante");
                });

            modelBuilder.Entity("EventosUTN.Pagos", b =>
                {
                    b.HasOne("EventosUTN.Inscripciones", "Inscripciones")
                        .WithMany()
                        .HasForeignKey("InscripcionesIdInscripcion");

                    b.Navigation("Inscripciones");
                });

            modelBuilder.Entity("EventosUTN.Participantes", b =>
                {
                    b.Navigation("Inscripciones");
                });

            modelBuilder.Entity("EventosUTN.Ponentes", b =>
                {
                    b.Navigation("Inscripciones");
                });
#pragma warning restore 612, 618
        }
    }
}
